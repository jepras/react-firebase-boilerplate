{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/data/DataSummary.js","components/data/DataList.js","components/dashboard/Dashboard.js","components/data/DataDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/data/CreateData.js","store/actions/dataActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/dataReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","className","NavLink","to","onClick","profile","initials","SignedOutLinks","state","firebase","links","uid","layout_SignedInLinks","layout_SignedOutLinks","Link","DataSummary","_ref","item","title","authorFirstName","authorLastName","moment","createdAt","toDate","calendar","DataList","data","map","id","key","data_DataSummary","Dashboard","_this$props","this","data_DataList","Redirect","Component","compose","firestore","ordered","firestoreConnect","collection","orderedBy","ownProps","match","params","content","SignIn","email","password","handleChange","e","_this","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","resp","doc","user","set","CreateData","createData","history","push","authorId","add","objectSpread","authorID","Date","App","BrowserRouter","layout_Navbar","Switch","Route","exact","path","component","DataDetails","isLocalhost","Boolean","window","location","hostname","register","config","navigator","URL","process","origin","addEventListener","swUrl","concat","fetch","response","status","headers","get","indexOf","serviceWorker","ready","registration","unregister","reload","registerValidSW","console","log","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","initState","authReducer","arguments","length","undefined","action","message","dataReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","registerServiceWorker"],"mappings":"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","file":"static/js/main.20306591.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { signOut } from '../../store/actions/authActions';\r\n\r\n// eslint-disable-next-line\r\nconst SignedInLinks = props => {\r\n  return (\r\n    <div>\r\n      <ul className=\"right\">\r\n        <li>\r\n          <NavLink to=\"/create\">New Data</NavLink>\r\n        </li>\r\n        <li>\r\n          <a onClick={props.signOut}>Log Out</a>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">\r\n            {props.profile.initials}\r\n          </NavLink>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    signOut: () => dispatch(signOut())\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(SignedInLinks);\r\n","export const signIn = credentials => {\r\n  return (dispatch, getState, { getFirebase }) => {\r\n    // communicate with database\r\n    const firebase = getFirebase();\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(credentials.email, credentials.password)\r\n      .then(() => {\r\n        dispatch({ type: 'LOGIN_SUCCESS' });\r\n      })\r\n      .catch(err => {\r\n        dispatch({ type: 'LOGIN_ERROR', err });\r\n      });\r\n  };\r\n};\r\n\r\nexport const signOut = () => {\r\n  return (dispatch, getState, { getFirebase }) => {\r\n    const firebase = getFirebase();\r\n    firebase\r\n      .auth()\r\n      .signOut()\r\n      .then(() => {\r\n        dispatch({ type: 'SIGNOUT_SUCCESS' });\r\n      });\r\n  };\r\n};\r\n\r\n// newUser to store newUser\r\nexport const signUp = newUser => {\r\n  // need firebase for auth, firestore for collections\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    const firebase = getFirebase();\r\n    const firestore = getFirestore();\r\n\r\n    // firebase method to authenticate and create newUser\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(newUser.email, newUser.password)\r\n      .then(resp => {\r\n        // from resp we can get user id\r\n        // if collection doesnt exist, firestore will create. Here we create it in firestore.\r\n        return (\r\n          firestore\r\n            .collection('users')\r\n            // create new document with userId\r\n            .doc(resp.user.uid)\r\n            .set({\r\n              firstName: newUser.firstName,\r\n              lastName: newUser.lastName,\r\n              initials: newUser.firstName[0] + newUser.lastName[0]\r\n            })\r\n        );\r\n      })\r\n      .then(() => {\r\n        dispatch({ type: 'SIGNUP_SUCCESS' });\r\n      })\r\n      .catch(err => {\r\n        dispatch({ type: 'SIGNUP_ERROR', err });\r\n      });\r\n  };\r\n};\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n// eslint-disable-next-line\r\nconst SignedOutLinks = () => {\r\n  return (\r\n    <div>\r\n      <ul className=\"right\">\r\n        <li>\r\n          <NavLink to=\"/signup\">Signup</NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/signin\">Login</NavLink>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignedOutLinks;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport SignedInLinks from './SignedInLinks';\r\nimport SignedOutLinks from './SignedOutLinks';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Navbar = props => {\r\n  const { auth, profile } = props;\r\n  // check if user is authenticated.\r\n  const links = auth.uid ? (\r\n    <SignedInLinks profile={profile} />\r\n  ) : (\r\n    <SignedOutLinks />\r\n  );\r\n  return (\r\n    <nav className=\"nav-wrapper grey darken-3\">\r\n      <div className=\"container\">\r\n        <Link to=\"/\" className=\"brand-logo\">\r\n          MyApp\r\n        </Link>\r\n        {links}\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    profile: state.firebase.profile\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Navbar);\r\n","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nconst DataSummary = ({ item }) => {\r\n  return (\r\n    <div className=\"card z-depth-0 project-summary\">\r\n      <div className=\"card-content grey-text text-darken-3\">\r\n        <span className=\"card-title \">{item.title}</span>\r\n        <p>\r\n          Posted by {item.authorFirstName} {item.authorLastName}\r\n        </p>\r\n        <p className=\"grey-text\">\r\n          {moment(item.createdAt.toDate()).calendar()}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DataSummary;\r\n","import React from 'react';\r\nimport DataSummary from './DataSummary';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst DataList = ({ data }) => {\r\n  return (\r\n    <div className=\"project-list section\">\r\n      {data &&\r\n        data.map(item => {\r\n          return (\r\n            <Link to={'/project/' + item.id} key={item.id}>\r\n              <DataSummary item={item} />\r\n            </Link>\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DataList;\r\n","import React, { Component } from 'react';\r\nimport DataList from '../data/DataList';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass Dashboard extends Component {\r\n  render() {\r\n    // takes data & auth from props\r\n    const { data, auth } = this.props;\r\n    if (!auth.uid) return <Redirect to=\"/signin\" />;\r\n\r\n    return (\r\n      <div className=\"dashboard container\">\r\n        <div className=\"row\">\r\n          <div className=\"col s12 m6\">\r\n            <DataList data={data} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    // take in data from state,firestore,ordered,projects\r\n    data: state.firestore.ordered.data,\r\n    auth: state.firebase.auth\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  // connects collection to to firestore to be used as state on site\r\n  firestoreConnect([\r\n    // which collection to connect to?\r\n    { collection: 'data', orderedBy: ['createdAt', 'desc'] }\r\n  ])\r\n)(Dashboard);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\nconst DataDetails = props => {\r\n  const { item, auth } = props;\r\n  if (!auth.uid) return <Redirect to=\"/signin\" />;\r\n\r\n  if (item) {\r\n    return (\r\n      <div className=\"container section item-details\">\r\n        <div className=\"card z-depth-0\">\r\n          <div className=\"card-content\">\r\n            <span className=\"card-title\">{item.title}</span>\r\n            <p>{item.content}</p>\r\n          </div>\r\n          <div className=\"card-action grey lighten-4 grey-text\">\r\n            <div>\r\n              Posted by {item.authorFirstName} {item.authorLastName}\r\n            </div>\r\n            <div>{moment(item.createdAt.toDate()).calendar()}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"container cente\">\r\n        <p>loading items</p>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const id = ownProps.match.params.id;\r\n  const data = state.firestore.data.data;\r\n  // check if we have any projects, if so, look for the one with the id in const above.\r\n  const item = data ? data[id] : null;\r\n  return {\r\n    // return it in object item. Now available in props.item\r\n    item: item,\r\n    auth: state.firebase.auth\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  // give page access to database state\r\n  firestoreConnect([{ collection: 'projects' }])\r\n)(DataDetails);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { signIn } from '../../store/actions/authActions';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass SignIn extends Component {\r\n  state = {\r\n    email: '',\r\n    password: ''\r\n  };\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    });\r\n  };\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    // calls signIn mapped to props & takes email/password from state.\r\n    this.props.signIn(this.state);\r\n  };\r\n  render() {\r\n    const { authError, auth } = this.props;\r\n    if (auth.uid) return <Redirect to=\"/\" />;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <form className=\"white\" onSubmit={this.handleSubmit}>\r\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n            <div className=\"red-text center\">\r\n              {authError ? <p>{authError}</p> : null}\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    authError: state.auth.authError,\r\n    auth: state.firebase.auth\r\n  };\r\n};\r\n\r\n// map dispatch to props, to get access to sign in action from auth actions\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    // creds is equal to credentials in signIn action in authActions\r\n    signIn: creds => dispatch(signIn(creds))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SignIn);\r\n","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { signUp } from '../../store/actions/authActions';\r\n\r\nclass SignUp extends Component {\r\n  state = {\r\n    email: '',\r\n    password: '',\r\n    firstName: '',\r\n    lastName: ''\r\n  };\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    });\r\n  };\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.signUp(this.state);\r\n  };\r\n  render() {\r\n    const { authError, auth } = this.props;\r\n    if (auth.uid) return <Redirect to=\"/\" />;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <form className=\"white\" onSubmit={this.handleSubmit}>\r\n          <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"firstName\">First Name</label>\r\n            <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"lastName\">Last Name</label>\r\n            <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\r\n            <div className=\"red-text center\">\r\n              {authError ? <p>{authError}</p> : null}\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    authError: state.auth.authError\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    // set signUp props to response to signUp action from authActions\r\n    signUp: newUser => dispatch(signUp(newUser))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SignUp);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createData } from '../../store/actions/dataActions';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass CreateData extends Component {\r\n  state = {\r\n    title: '',\r\n    content: ''\r\n  };\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    });\r\n  };\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    // calls mapDispatchToProp function\r\n    this.props.createData(this.state);\r\n    // access to browser history through props\r\n    this.props.history.push('/');\r\n  };\r\n  render() {\r\n    const { auth } = this.props;\r\n    if (!auth.uid) return <Redirect to=\"/signin\" />;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <form className=\"white\" onSubmit={this.handleSubmit}>\r\n          <h5 className=\"grey-text text-darken-3\">Create a New Project</h5>\r\n          <div className=\"input-field\">\r\n            <input type=\"text\" id=\"title\" onChange={this.handleChange} />\r\n            <label htmlFor=\"title\">Project Title</label>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <textarea\r\n              id=\"content\"\r\n              className=\"materialize-textarea\"\r\n              onChange={this.handleChange}\r\n            />\r\n            <label htmlFor=\"content\">Project Content</label>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1\">Create</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.firebase.auth\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    // passing in action createData imported in the top. Project is in the state. Dispatch as parameter.\r\n    createData: item => dispatch(createData(item))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(CreateData);\r\n","export const createData = item => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    // store database in firestore\r\n    const firestore = getFirestore();\r\n    // get state gives us state object where we can fetch\r\n    const profile = getState().firebase.profile;\r\n    const authorId = getState().firebase.auth.uid;\r\n    // get collection\r\n    firestore\r\n      .collection('data')\r\n      .add({\r\n        // use data from parameter item (where title is from createData component)\r\n        ...item,\r\n        authorFirstName: profile.firstName,\r\n        authorLastName: profile.lastName,\r\n        authorID: authorId,\r\n        createdAt: new Date()\r\n      })\r\n      .then(() => {\r\n        dispatch({ type: 'CREATE_DATA', item });\r\n      })\r\n      .catch(err => {\r\n        dispatch({ type: 'CREATE_DATA_ERROR', err });\r\n      });\r\n  };\r\n};\r\n","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Dashboard from './components/dashboard/Dashboard';\nimport DataDetails from './components/data/DataDetails';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateData from './components/data/CreateData';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route exact path=\"/\" component={Dashboard} />\n            <Route path=\"/data/:id\" component={DataDetails} />\n            <Route path=\"/signin\" component={SignIn} />\n            <Route path=\"/signup\" component={SignUp} />\n            <Route path=\"/create\" component={CreateData} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\r\n  authError: null\r\n};\r\n\r\nconst authReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case 'LOGIN_ERROR':\r\n      // send to own auth state, not firebase auth state\r\n      return {\r\n        ...state,\r\n        authError: 'Login failed'\r\n      };\r\n    case 'LOGIN_SUCCESS':\r\n      console.log('login success');\r\n      return {\r\n        ...state,\r\n        authError: null\r\n      };\r\n    case 'SIGNOUT_SUCCESS':\r\n      console.log('sign out success');\r\n      return state;\r\n    case 'SIGNUP_SUCCESS':\r\n      console.log('signup success');\r\n      return {\r\n        ...state,\r\n        authError: null\r\n      };\r\n    case 'SIGNUP_ERROR':\r\n      return {\r\n        ...state,\r\n        authError: action.err.message\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","const initState = {};\r\n\r\n// eslint-disable-next-line\r\nconst dataReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case 'CREATE_DATA':\r\n      console.log('create data', action.data);\r\n      return state;\r\n    case 'CREATE_DATA_ERROR':\r\n      console.log('create data error,', action.err);\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default dataReducer;\r\n","import authReducer from './authReducer';\r\nimport dataReducer from './dataReducer';\r\nimport { combineReducers } from 'redux';\r\nimport { firestoreReducer } from 'redux-firestore';\r\nimport { firebaseReducer } from 'react-redux-firebase';\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  data: dataReducer,\r\n  // firestoreReducer syncs data in database to firestore\r\n  firestore: firestoreReducer,\r\n  // for login\r\n  firebase: firebaseReducer\r\n});\r\n\r\nexport default rootReducer;\r\n\r\n// the key name will be the data property on the state object\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\n// Initialize Firebase\r\nvar config = {\r\n  apiKey: 'AIzaSyAGbwRpp9C0VR1XadRD0T0Fvv2WtuB08rg',\r\n  authDomain: 'boilerproject-ee8bb.firebaseapp.com',\r\n  databaseURL: 'https://boilerproject-ee8bb.firebaseio.com',\r\n  projectId: 'boilerproject-ee8bb',\r\n  storageBucket: '',\r\n  messagingSenderId: '654567274367'\r\n};\r\nfirebase.initializeApp(config);\r\nfirebase.firestore().settings({ timestampsInSnapshots: true });\r\n\r\nexport default firebase;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig';\n\n// Enhancing store with compose and elements from redux-firestore & react-redux-firebase, to use in projectActions.\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reduxFirestore(fbConfig),\n    // make use of attachAuthIsReady to render on time - sync firestore profile with user from colleciton users\n    reactReduxFirebase(fbConfig, {\n      useFirestoreForProfile: true,\n      userProfile: 'users',\n      attachAuthIsReady: true\n    })\n  )\n);\n\n// wait for firebase to be ready before rendering\nstore.firebaseAuthIsReady.then(() => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById('root')\n  );\n  registerServiceWorker();\n});\n"],"sourceRoot":""}